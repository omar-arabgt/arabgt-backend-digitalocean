services:
  web:
    build: .
    container_name: arabgt_web
    restart: unless-stopped  
    volumes:
      - .:/app
    expose:
      - 8000
    depends_on:
      - mysql_db
      - db
      - pgbouncer
    env_file:
      - core/.env

  db_backup:
    image: postgres:13
    container_name: arabgt_db_backup
    restart: unless-stopped  
    depends_on:
      - db
    env_file:
      - core/.env
    volumes:
      - /data/arabgt_backups:/backups
      - ./backup-scripts:/scripts
    command: >
      sh -c "
        while true; do
          echo 'Creating database backup...'
          pg_dump -h db -U $$POSTGRES_USER -d $$POSTGRES_DB > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
          echo 'Backup completed'
          
          # Keep only last 7 days of backups
          find /backups -name '*.sql' -mtime +7 -delete
          
          # Wait 24 hours before next backup
          sleep 86400
        done
      "

  db:
    image: postgres:13
    container_name: arabgt_db
    restart: unless-stopped  
    env_file:
      - core/.env
    ports:
      - "5432:5432"
    volumes:
      - /data/arabgt_db:/var/lib/postgresql/data
    command: postgres -c 'max_connections=300' -c 'shared_buffers=512MB' -c 'effective_cache_size=1GB'

  pgbouncer_init:
    image: alpine:latest
    container_name: arabgt_pgbouncer_init
    volumes:
      - pgbouncer_config:/pgbouncer_config
    env_file:
      - core/.env
    command: >
      sh -c "
        echo 'Setting up PGBouncer userlist...' &&
        echo 'Reading credentials from environment:' &&
        echo 'POSTGRES_USER: '$$POSTGRES_USER &&
        echo 'POSTGRES_PASSWORD: [HIDDEN]' &&
        echo '\"'$$POSTGRES_USER'\" \"'$$POSTGRES_PASSWORD'\"' > /pgbouncer_config/userlist.txt &&
        echo 'Generated userlist.txt:' &&
        cat /pgbouncer_config/userlist.txt
      "

  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    container_name: arabgt_pgbouncer
    restart: unless-stopped
    depends_on:
      - db
      - pgbouncer_init
    ports:
      - "6432:6432"
    environment:
      DATABASES_HOST: db
      DATABASES_PORT: 5432
      DATABASES_USER: ${POSTGRES_USER}
      DATABASES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASES_DBNAME: ${POSTGRES_DB}
      PGBOUNCER_POOL_MODE: transaction
      PGBOUNCER_DEFAULT_POOL_SIZE: 25
      PGBOUNCER_MAX_CLIENT_CONN: 1000
      PGBOUNCER_MAX_DB_CONNECTIONS: 50
      PGBOUNCER_SERVER_RESET_QUERY: DISCARD ALL
      PGBOUNCER_AUTH_TYPE: plain
      PGBOUNCER_AUTH_FILE: /etc/pgbouncer/userlist.txt
    env_file:
      - core/.env
    volumes:
      - pgbouncer_config:/etc/pgbouncer

  redis:
    image: redis:alpine
    container_name: arabgt_redis
    restart: unless-stopped  
    ports:
      - "6380:6379"
    volumes:
      - /data/arabgt_rdb:/data
    env_file:
      - core/.env

  celery_worker:
    build: .
    container_name: arabgt_celery
    restart: unless-stopped  
    command: celery -A core worker --loglevel=info --concurrency=4 --max-tasks-per-child=1000
    volumes:
      - .:/app
    depends_on:
      - redis
      - pgbouncer
    env_file:
      - core/.env

  celery_beat:
    build: .
    container_name: arabgt_celery_beat
    restart: unless-stopped  
    env_file:
      - core/.env
    command: celery -A core beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
      - celery_worker
      - pgbouncer

  # mysql_db will be removed when we connect real database
  mysql_db:
    image: mysql:8.0
    container_name: arabgt_mysql
    restart: unless-stopped  
    env_file:
      - core/.env
    ports:
      - "3306:3306"
    volumes:
      - /data/arabgt_mysqldb:/var/lib/mysql
  
  nginx:
    image: nginx:latest
    container_name: arabgt_nginx
    restart: unless-stopped  
    ports:
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/arabgt_web/staticfiles
      - ./nginx/certs/public.pem:/etc/nginx/ssl/live/certs/public.pem
      - ./nginx/certs/private.pem:/etc/nginx/ssl/live/certs/private.pem
      - ./media:/media
    depends_on:
      - web

volumes:
  pgbouncer_config: